"""
На языке Python написать алгоритм (функцию) определения четности целого числа, который будет аналогичен
нижеприведенному по функциональности, но отличен по своей сути. Объяснить плюсы и минусы обеих реализаций.

Пример:

def isEven(value):
    return value % 2 == 0

===

Ниже приведен пример где мы используем побитовый оператор "&"
Проверяет младший бит, в двоичной системе четные числа всегда оканчиваются на 0

Плюсы вашего примера, в том, что понятны большенству программистов
Минусы в том, что такой способ более затратен, чем побитовые операции

Плюсы моего примера в том, что быстрее в большенстве случаев
Минусы наверное в том, что не многие используют данный метод

Вывод:
Если требуется простота то лучше использовать ваш пример, если нам важна производительность, то мой пример
"""


def is_even(value):
    return (value & 1) == 0


print(is_even(4))  # True
print(is_even(5))  # False

